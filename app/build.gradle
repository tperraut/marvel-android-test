apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: '../config/quality.gradle'

// Load keystore
def keystorePropertiesFile = rootProject.file("app/keystore/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "rocks.flawless.marveltestapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file(keystoreProperties['releaseStoreFile'])
            storePassword keystoreProperties['releaseStorePassword']
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
        }
        debug {
            storeFile file(keystoreProperties['debugStoreFile'])
            storePassword keystoreProperties['debugStorePassword']
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "api"

    productFlavors {
        production {
            dimension "api"
        }

        dev {
            dimension "api"
        }
    }

    splits {
        abi {
            enable true
            universalApk true
        }
        density {
            enable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    // /!\ activity-ktx alpha07 not compatible with appcompat alpha04 /!\
    implementation 'androidx.activity:activity-ktx:1.0.0-alpha06'
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha04'
    // Lifecycle
    def lifecycle_version = "2.1.0-alpha04"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    // CoffeeScene
    implementation 'com.geronimostudios.coffeescene:coffeescene:1.0.2'
    // Fresco
    implementation 'com.facebook.fresco:fresco:1.12.1'
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    /* Gson */
    implementation 'com.google.code.gson:gson:2.8.5'
    /* CoffeeScene */
    implementation 'com.geronimostudios.coffeescene:coffeescene:1.0.2'
}
